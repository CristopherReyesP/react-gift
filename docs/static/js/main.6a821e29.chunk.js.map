{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchtGifs","console","log","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAKaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAiB9C,OAGQ,sBAAMC,SAZO,SAACC,GAClBA,EAAEC,iBACGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAG,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAQd,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SApBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCVlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAQD,EAAKE,KAAI,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVtB,kBAcZM,GAdY,4CAAH,sDCYLO,EAVK,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAE9B,OACI,sBAAKc,UAAU,6CAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCHJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECAZ,SAACA,GAAc,IAAD,EAEbd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ0B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAgBvC,OATAC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAK,SAAAC,GACfH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAACpB,IAEGqB,EDfyBK,CAAe1B,GAAnCa,EADyB,EAC9BN,KAAaa,EADiB,EACjBA,QAKpB,OAJDO,QAAQC,IAAIR,GAKP,qCACA,6BAAKpB,IACHoB,GAAW,mBAAGJ,UAAU,wCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAGYH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAGKA,GADEA,EAAIC,aEOpBkB,EAxBM,WAAO,IAAD,EAEa3C,mBAAS,CAAC,cAFvB,mBAEhB4C,EAFgB,KAEJ7C,EAFI,KAIvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ6C,EAAWrB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEAA,SAAWA,GADLA,Y,MCZ9B+B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.6a821e29.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes  from 'prop-types';\r\n\r\n\r\n\r\nexport const AddCategory = ({ setcategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if ( inputValue.trim().length > 2 ) {\r\n            setcategories( cat => [ inputValue, ...cat] );\r\n            setInputValue('');\r\n        }\r\n        // console.log('submit hecho')\r\n    }\r\n\r\n    return (\r\n        \r\n            \r\n            <form onSubmit={ handleSubmit }>\r\n                <input\r\n                    type='text'\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                />\r\n            </form>\r\n        \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setcategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=WEXszipfgfp4bMiyZWpkzGXUWbUa5zjs`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs =  data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n} ","import React from 'react'\r\n\r\nconst GifGridItem = ({ id, title, url }) => {\r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeInDown'>\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React/* , { useEffect, useState }  */from 'react';\r\nimport { useFetchtGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n   const { data:images, loading } = useFetchtGifs( category );\r\n   console.log(loading);\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n        { loading && <p className='card animate__animated animate__flash'>Loading</p> }\r\n        \r\n        <div className='card-grid'>\r\n            \r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                        \r\n                        key= { img.id }\r\n                        { ...img }\r\n                        />  \r\n                    ))\r\n                }\r\n           \r\n        </div>\r\n        </> \r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchtGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category).then(imgs => {\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n        });\r\n    }, [category]);\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setcategories] = useState(['One Punch']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setcategories={setcategories} />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid \r\n                        key={ category }\r\n                        category={ category }\r\n                        />\r\n                        ))         \r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}